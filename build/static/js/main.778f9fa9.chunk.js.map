{"version":3,"sources":["DataContext.js","constants.js","Dashboard/Popup.js","SatelliteStyle.js","Dashboard/Map.js","Dashboard/Table.js","Dashboard/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","data","getData","selectId","getSelectedID","heatMap","getSelectedHeatMap","useDataContext","useContext","useIDContext","selectedID","API_URL","COMPANY_DEPARTMENT","useStyles","makeStyles","theme","root","flexGrow","MediaControlCard","props","classes","link","info","avatar","formats","thumbnail","url","Grid","container","alignItems","className","spacing","item","xs","style","margin","Avatar","src","alt","firstName","Typography","component","variant","lastName","Date","createdAt","toLocaleString","flex","Chip","label","healthStatus","address","SatelliteStyle","HeatmapOverlay","require","width","height","color","background","borderRadius","textAlign","navRightStyle","position","top","left","padding","ClusterMarker","longitude","latitude","pointCount","Map","mapRef","useRef","React","useState","bearing","zoom","viewport","setViewport","popupInfo","setPopupInfo","map","setStyle","useEffect","ref","current","getMap","onLoad","console","log","mapStyle","onViewportChange","dragPan","viewportChangeMethod","viewportChangeOptions","attributionControl","locations","_canvas","clientWidth","clientHeight","radius","extent","nodeSize","point","key","id","viewBox","cursor","fill","stroke","transform","onClick","d","compact","customAttribution","tipSize","anchor","closeOnClick","onClose","showCompass","showZoom","fitBoundsOptions","maxZoom","FormControlLabel","control","Switch","checked","onChange","event","target","name","justify","CircularProgress","Table","moment","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","setData","company","setCompany","department","setDepartment","companies","setCompanies","departments","setDepartments","a","fetch","startOf","toISOString","then","res","json","response","companyDepartments","companiesData","departmentsData","record","index","includes","companyName","push","Object","keys","fetchData","fetchCompany","searchData","endOf","replace","downloadCSV","array","document","createElement","csv","result","forEach","element","field","join","ctr","convertArrayOfObjectsToCSV","filename","toLocaleDateString","match","setAttribute","encodeURI","click","utils","MomentUtils","overflowY","Paper","backgroundColor","md","format","value","date","KeyboardButtonProps","inputVariant","size","FormControl","fullWidth","maxWidth","InputLabel","Select","labelId","MenuItem","comp","depart","Button","onRowClick","rowData","title","_","uniqBy","length","columns","export","headerStyle","cellStyle","grouping","render","hidden","minWidth","detailPanel","gender","email","options","search","exportButton","paging","pageSize","exportAllData","exportCsv","pageSizeOptions","paddingTop","paddingBottom","minHeight","display","breakpoints","up","createMuiTheme","palette","primary","main","secondary","SearchAppBar","setHeatMap","AppBar","Toolbar","Checkbox","paper","text","App","setSelectedID","Provider","xl","lg","overflowX","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.778f9fa9.chunk.js","sourcesContent":["import {useContext, createContext } from 'react';\n\n\nexport const AppContext = createContext({\n    data: null,\n    getData: () => {},\n    selectId: null,\n    getSelectedID: () => {},\n    heatMap: null,\n    getSelectedHeatMap: () => {},\n\n})\n\nexport function useDataContext () {\n    const {data, getData} = useContext(AppContext);\n    return {data, getData};\n}\n\nexport function useIDContext () {\n    const {selectedID, getSelectedID, heatMap, getSelectedHeatMap} = useContext(AppContext);\n    return {selectedID, getSelectedID, heatMap, getSelectedHeatMap};\n}","const API_URL = `https://backend.powermap.live`\nconst COMPANY_DEPARTMENT = `${API_URL}/company-departments?_limit=-1`\n\n\nexport {\n    API_URL,\n    COMPANY_DEPARTMENT\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport {API_URL} from '../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  }\n}));\n\nexport default function MediaControlCard(props) {\n  const classes = useStyles();\n  const link = props.info.avatar.formats?props.info.avatar.formats.thumbnail.url:props.info.avatar.url;\n  return (\n    <Grid container alignItems=\"flex-start\" className={classes.root} spacing={2}>\n    <Grid item xs={3} \n        style={{margin: \"auto\"}}\n    >\n        <Avatar\n            src={API_URL + link}\n            alt={props.info.firstName}\n        />\n    </Grid>\n    <Grid item xs={9}>\n        <Typography component=\"subtitle1\" variant=\"subtitle1\">\n            {props.info.firstName + \" \" + props.info.lastName}\n            <br />\n            <small>{new Date(props.info.createdAt).toLocaleString()}</small>\n        </Typography>\n    </Grid>\n    <Grid item xs={12}>\n        <div style={{flex: \"right\"}}>\n        <Chip label={props.info.healthStatus} /> \n        </div>\n        <Typography component=\"p\" variant=\"p\">\n            {props.info.address}\n        </Typography>\n    </Grid>\n    </Grid>\n  );\n}","const SatelliteStyle = {\n        'version': 8,\n        'sources': {\n        'raster-tiles': {\n        'type': 'raster',\n        'tiles': [\n        'https://mt0.google.com/vt/lyrs=y&hl=th&x={x}&y={y}&z={z}'\n        ],\n        'tileSize': 256,\n        }\n        },\n        'layers': [\n        {\n        'id': 'simple-tiles',\n        'type': 'raster',\n        'source': 'raster-tiles',\n        'minzoom': 0,\n        'maxzoom': 22\n        }\n    ]\n};\n\nexport default SatelliteStyle;","import React, {useEffect, useRef} from 'react';\nimport ReactMapGL, {AttributionControl, Marker, Popup, FullscreenControl, GeolocateControl, NavigationControl } from '@urbica/react-map-gl';\nimport Cluster from '@urbica/react-map-gl-cluster';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {useDataContext, useIDContext} from '../DataContext';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport StaffInfo from './Popup';\nimport SatelliteStyle from '../SatelliteStyle';\nvar HeatmapOverlay = require('react-map-gl-heatmap-overlay');\nvar window = require('global/window');\n\nconst style = {\n    width: '20px',\n    height: '20px',\n    color: '#fff',\n    background: '#1978c8',\n    borderRadius: '20px',\n    textAlign: 'center'\n};\n\nconst navRightStyle = {\n  position: 'absolute',\n  top: 45,\n  left: 0,\n  padding: '10px',\n  color: 'white'\n};\n\nconst ClusterMarker = ({ longitude, latitude, pointCount }) => (\n    <Marker longitude={longitude} latitude={latitude}>\n      <div style={{ ...style, background: '#f28a25' }}>{pointCount}</div>\n    </Marker>\n);\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst SIZE = 25;\n\nexport default function Map () {\n  const mapRef = useRef(null);\n    const [viewport, setViewport] = React.useState({\n        longitude: 100.594699,\n        latitude: 14.244686, \n        bearing: 0,\n        zoom: 8\n    })\n    const [popupInfo, setPopupInfo] = React.useState(null);\n    const [style, setStyle] = React.useState({\n      map: true,\n    });\n  \n    const handleChange = (event) => {\n      setStyle({ ...style, [event.target.name]: event.target.checked });\n    };\n\n    const {data} = useDataContext();\n    const {selectedID, getSelectedID, heatMap} = useIDContext();\n\n    useEffect(()=> {\n      if(selectedID && selectedID.latitude){\n        setViewport({...viewport, \n          latitude: selectedID.latitude, longitude: selectedID.longitude, zoom: 14\n        })\n        setPopupInfo(selectedID);\n        getSelectedID(null);\n      };\n    });\n\n    const onMarkerClick = (e) => {\n        setPopupInfo(e);\n    };\n    const _renderPopup = () => {\n        return (\n          popupInfo && (\n            <Popup\n              tipSize={5}\n              anchor=\"bottom\"\n              longitude={popupInfo.longitude}\n              latitude={popupInfo.latitude}\n              closeOnClick={true}\n              onClose={() => setPopupInfo(null)}\n              style={{\n                  width: '300px !important'\n              }}\n            >\n              <StaffInfo info={popupInfo} />\n            </Popup>\n          )\n        );\n    }\n    \n    const onLoad = () => console.log('mapRef.current is ready for use', mapRef.current);\n    \n    if(!data) return (\n      <Grid container justify=\"center\" alignItems=\"center\"><CircularProgress /></Grid>\n    )\n    return (\n      <div>\n        <ReactMapGL\n        ref={ref => mapRef.current = ref && ref.getMap()} onLoad={onLoad}\n        style={{ width: '100%', height: 'calc(100vh - 48px)' }}\n        // mapStyle={\n        //   \"https://search.map.powermap.in.th/api/v2/map/vtile/styles?name=thailand_th_black&access_token=b378c575291af30a29f59919fd7e7e4c012d45c4\"\n        // }\n        mapStyle={style.map ?\n          \"https://search.map.powermap.in.th/api/v2/map/vtile/styles?name=thailand_th_black&access_token=b378c575291af30a29f59919fd7e7e4c012d45c4\"\n          :SatelliteStyle\n        }\n        {...viewport}\n        onViewportChange={(viewport) => {\n          setViewport(viewport);\n        }}\n        dragPan= {true}\n        viewportChangeMethod={\"flyTo\"}\n        viewportChangeOptions={1200}\n        attributionControl={false}\n        >\n        {heatMap?\n          <HeatmapOverlay locations={data} {...viewport} width={mapRef.current?mapRef.current._canvas.clientWidth:0} height={mapRef.current?mapRef.current._canvas.clientHeight:0}/>\n          :\n          <Cluster radius={40} extent={512} nodeSize={64} component={ClusterMarker}>\n              {data.map(point => (\n              <Marker\n                  key={point.id}\n                  longitude={point.longitude}\n                  latitude={point.latitude}\n              >\n              <svg\n                  height={SIZE}\n                  viewBox=\"0 0 24 24\"\n                  style={{\n                      cursor: 'pointer',\n                      fill: '#d00',\n                      stroke: 'none',\n                      transform: `translate(0px,${SIZE}px)`\n                  }}\n                  onClick={() => onMarkerClick(point)}\n                  >\n                    <path d={ICON} />\n              </svg> \n              </Marker>\n          ))}\n          </Cluster>\n        }\n        <AttributionControl\n          compact={false}\n          position='bottom-right'\n          customAttribution='Powered by Powermap'\n        />\n        {_renderPopup()}\n\n        <NavigationControl showCompass showZoom position='top-right' />\n        <FullscreenControl position='top-right' />\n        <GeolocateControl position='top-right' fitBoundsOptions={{maxZoom: 14}}/>\n        </ReactMapGL>\n        <div style={navRightStyle}>\n          <FormControlLabel\n            control={<Switch checked={style.map} onChange={handleChange} name=\"map\" />}\n            label={style.map?\"MAP\":\"Satellite\"}\n          />\n        </div>\n      </div>\n    )\n\n}\n","import React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport {Avatar, Chip, Grid, FormControl, InputLabel, MenuItem, Select, Button, Paper, CircularProgress } from \"@material-ui/core\";\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport {COMPANY_DEPARTMENT} from '../constants';\nimport {useDataContext, useIDContext} from '../DataContext';\nimport _ from 'lodash';\n\nimport {API_URL} from '../constants';\n\nexport default function Table (props) {\n    \n    const [selectedStartDate, setSelectedStartDate] = React.useState(new moment());\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new moment());\n    const [data, setData] = React.useState(null);\n    const [company, setCompany] = React.useState();\n    const [department, setDepartment] = React.useState();\n    const [companies, setCompanies] = React.useState(null);\n    const [departments, setDepartments] = React.useState(null);\n    const {getData} = useDataContext();\n    const {getSelectedID} = useIDContext();\n\n    useEffect (()=> {\n        async function fetchData() {\n            try {\n                let response = await fetch( API_URL + `/staff-locations?_limit=-1&_sort=createdAt:DESC&createdAt_gte=${new moment().startOf('day').toISOString()}`).then(res=>res.json())    \n                \n                setData(response);\n                getData(response)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        if(!data) {\n            fetchData();\n        }\n        async function fetchCompany() {\n            try {\n                let companyDepartments = await fetch(COMPANY_DEPARTMENT).then(res => res.json());\n                let companiesData = [];\n                let departmentsData = {};\n                await companyDepartments.map((record, index) => {\n                    if (!companiesData.includes(record.companyName)) {\n                      companiesData.push(record.companyName)\n                    }\n                    if (!Object.keys(departmentsData).includes(record.companyName)) {\n                        departmentsData[record.companyName] = [record.department]\n                    } else {\n                        departmentsData[record.companyName].push(record.department)\n                    }\n                    \n                })\n                setCompanies(companiesData);\n                setDepartments(departmentsData);\n            } catch (error) {\n                console.log(error)\n            }\n          }\n          if (!companies || !departments){\n              fetchCompany();\n        }\n    },[company, department]);\n\n    const searchData = async () => {\n      try {\n          let response = await fetch( \n            `${API_URL}/staff-locations?_limit=-1&_sort=createdAt:DESC&createdAt_gte=${new moment(selectedStartDate).startOf('day').toISOString()}&createdAt_lte=${new moment(selectedEndDate).endOf('day').toISOString()}&${company && company !== \"ALL\"?'company='+company:\"\"}&${department && department !== \"ALL\"?'department='+department.replace(\"&\",\"%26\"):\"\"}`\n            )\n          .then(res=>res.json())\n          setData(response)\n          getData(response)\n      } catch (error) {\n          console.log(error)\n      }\n    }\n\n    const handleStartDateChange = (date) => {\n        setSelectedStartDate(date);\n    };\n    const handleEndDateChange = (date) => {\n        setSelectedEndDate(date);\n    };\n    \n    const handleChangeCompany = company => {\n        setCompany(company.target.value);\n        setDepartment(\"ALL\");\n    };\n\n    const handleChangeDepartment = department => {\n        setDepartment(department.target.value);\n    };\n    function convertArrayOfObjectsToCSV(array, data) {\n      let result;\n      let keys = [];\n      array.forEach(element => {\n        if(element.field !== 'url')\n          keys.push(element.field);\n      });\n    \n      const columnDelimiter = \",\";\n      const lineDelimiter = \"\\n\";\n    \n      result = \"\";\n      result += keys.join(columnDelimiter);\n      result += lineDelimiter;\n    \n      data.forEach(item => {\n        let ctr = 0;\n        keys.forEach(key => {\n          if (ctr > 0) result += columnDelimiter;\n          if (key === \"createdAt\")\n            result += new Date(item[key]).toLocaleString();\n          else\n            result += item[key]\n          ctr++;\n        });\n        result += lineDelimiter;\n      });\n      return result;\n    }\n    \n    function downloadCSV(array, data) {\n      const link = document.createElement(\"a\");\n      let csv = convertArrayOfObjectsToCSV(array, data);\n      if (csv == null) return;\n    \n      const filename = `export_from_${new Date(selectedStartDate).toLocaleDateString()}_to_${new Date(selectedEndDate).toLocaleDateString()}.csv`;\n    \n      if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`;\n      }\n    \n      link.setAttribute(\"href\", encodeURI(csv));\n      link.setAttribute(\"download\", filename);\n      link.click();\n    }\n\n    if (!data || !companies || !departments){\n      return (\n        <Grid container justify=\"center\" alignItems=\"center\" \n        style={{ minHeight: '100vh', maxWidth: '100%' }}><CircularProgress /></Grid>\n      )\n    };\n\n    return (\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <div style=\n          {{\n            height: 'calc(100vh - 48px)',\n            overflowY: 'scroll'\n          }}>\n        <Paper style={{\"overflow\": \"hidden\"}}>\n          <div style={{ backgroundColor: '#e8eaf5'}}>\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={6} md={3} style={{ height: 80}}>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"start date\"\n            format=\"YYYY/MM/DD\"\n            value={selectedStartDate}\n            onChange={handleStartDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n            inputVariant=\"outlined\"\n            size=\"small\"\n          /></Grid>\n          <Grid item xs={6} md={3} style={{ height: 80}}>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"end date\"\n            format=\"YYYY/MM/DD\"\n            value={selectedEndDate}\n            onChange={handleEndDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n            inputVariant=\"outlined\"\n            size=\"small\"\n          />\n          </Grid>\n        <Grid item xs={12} md={2}>\n        <div>\n        <FormControl variant=\"outlined\" fullWidth style={{maxWidth: 266}} size=\"small\" >\n            <InputLabel id=\"demo-simple-select-outlined-label\" >Company</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={company?company:\"ALL\"}\n                onChange={handleChangeCompany}\n                label=\"Company\"\n            >\n            <MenuItem value={\"ALL\"} key={\"first\"}>{\"ALL\"}</MenuItem>\n            {companies.map((comp, index) => (\n                <MenuItem value={comp} key={index}>{comp}</MenuItem>\n            ))}\n            </Select>\n        </FormControl>\n        </div>\n        </Grid>\n        <Grid item xs={12} md={2}>\n        <FormControl variant=\"outlined\" fullWidth style={{maxWidth: 266}} size=\"small\" >\n            <InputLabel>Department</InputLabel>\n            <Select\n              id=\"demo-simple-select-outlined\"\n              value={department?department:\"ALL\"}\n              onChange={handleChangeDepartment}\n              label=\"Department\"\n            >\n            <MenuItem value={\"ALL\"} key={\"first\"}>{\"ALL\"}</MenuItem>\n            {company?departments[company].map((depart, index) => (\n                <MenuItem value={depart} key={index}>{depart}</MenuItem>\n            )):null}\n            </Select>\n        </FormControl>\n        </Grid> \n        <Button \n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={() => searchData()}\n          size={\"small\"}\n        >SEARCH</Button>\n        </Grid>\n      </div>\n        <MaterialTable \n            onRowClick={(event, rowData) => {\n              getSelectedID(rowData);\n            }}\n            title={`${_.uniqBy(data, \"empID\").length} persons`}\n            columns={[\n            { title: 'Company', field: 'company'},\n            { title: 'Department', field: 'department', width: 50},\n            {\n                field: 'url',\n                title: 'Avatar',\n                export: false,\n                headerStyle: {maxWidth: 60},\n                cellStyle:{ padding: '0px'},\n                grouping: false,\n                render: rowData => {\n                  let link = rowData.avatar.formats?rowData.avatar.formats.thumbnail.url:rowData.avatar.url;\n                  return <Avatar alt={rowData.firstName} src={API_URL + link } style={{width: 30, height: 30}}/>\n                }\n            },\n            { title: 'E. ID', field: 'empID'},\n            { title: 'F. name', field: 'firstName',  headerStyle: {maxWidth: 60},\n            grouping: false },\n            { title: 'L. name', field: 'lastName', headerStyle: {maxWidth: 40},\n            grouping: false },\n            { title: 'Health', field: 'healthStatus', headerStyle: {maxWidth: 60},\n            grouping: false },\n            { title: 'Gender', field: 'gender', hidden: true, export: true, grouping: false },\n            { title: 'Email', field: 'email', hidden: true, export: true, grouping: false },\n            { title: 'Address', field: 'address', hidden: true, export: true, grouping: false },\n            { title: 'At', field: 'createdAt', grouping: false,  headerStyle: {minWidth: 120}, width: 120,\n              render: rowData => new Date(rowData.createdAt).toLocaleString()}\n            ]}\n            detailPanel={rowData => {\n              return (\n                <Grid container spacing={2} style={{margin: 10}}>\n                  <Grid item>\n                  <Avatar alt={rowData.firstName} src={API_URL + rowData.avatar.url} style={{width: 150, height: 150}}/>\n                  </Grid>\n                  <Grid item>\n                  <Chip label={rowData.gender} />  \n                  </Grid>\n                  <Grid item>\n                  <Chip label={rowData.email} />\n                  </Grid>\n                  <Grid item>\n                  <Chip label={rowData.address} />\n                  </Grid>\n                </Grid>\n              )\n            }}\n            options={{\n                search: true,\n                exportButton: true,\n                paging: true,\n                pageSize: 20,\n                grouping: true,\n                exportAllData: true,\n                exportCsv: (columns, data) => {\n                  downloadCSV(columns, data);\n                },\n                pageSizeOptions: [5,10,20,50,100,500],\n                cellStyle: {height: 30, paddingTop:0, paddingBottom:0}\n            }}\n            // actions={[\n            //     {\n            //       icon: 'map',\n            //       tooltip: 'Save User',\n            //       onClick: (event, rowData) => {\n            //         // Do save operation\n            //         alert(JSON.stringify(rowData))\n            //         this.props.callMap(rowData);\n            //       }\n            //     }\n            // ]}\n            data={data}\n        />\n    </Paper></div></MuiPickersUtilsProvider>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { fade, makeStyles, createMuiTheme,MuiThemeProvider } from '@material-ui/core/styles';\nimport {useIDContext} from '../DataContext';\nimport {COMPANY_DEPARTMENT} from '../constants';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    width: 500\n  }\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#ff9100',\n    },\n  }\n});\n\n\nexport default function SearchAppBar() {\n  const {getSelectedHeatMap} = useIDContext();\n  const [heatMap, setHeatMap] = useState(false);\n  \n  const handleChange = (event) => {\n    setHeatMap(event.target.checked);\n    getSelectedHeatMap(event.target.checked);\n  };\n\n  const classes = useStyles();\n  return (\n    <MuiThemeProvider theme={theme}>\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography className={classes.title}>\n          <img src=\"/dashboard/Logo4.png\" height=\"50\" alt={\"logo\"} />\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={heatMap}\n                onChange={handleChange}\n                name=\"heatMap\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Heat Map\"\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n    </MuiThemeProvider>\n  );\n}","import React from 'react';\nimport Map from './Dashboard/Map';\nimport Table from './Dashboard/Table';\nimport SearchBar from './Dashboard/SearchBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {AppContext} from './DataContext';\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = React.useState(null);\n  const [selectedID, setSelectedID] = React.useState(null);\n  const [heatMap, setHeatMap] = React.useState(false);\n\n  const getData = (data) => {\n    setData(data)\n  }\n  const getSelectedID = (data) => {\n    setSelectedID(data)\n  }\n  const getSelectedHeatMap = (data) => {\n    setHeatMap(data)\n  }\n\n\n  return (\n    <AppContext.Provider value={{data, selectedID, getData, getSelectedID, heatMap, getSelectedHeatMap}} >\n      <div className={classes.root}>\n        <SearchBar />\n        <Grid container>\n          <Grid item xs={12} xl={6} lg={4}>\n            <Map />\n          </Grid>\n          <Grid item xs={12} xl={6} lg={8}>\n            <div style={{height: '100%', overflowY: \"scroll\", overflowX: \"scroll\"}}>\n              <Table />\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}