{"version":3,"sources":["DataContext.js","constants.js","Dashboard/Popup.js","SatelliteStyle.js","Dashboard/Map.js","Dashboard/Table.js","Dashboard/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","data","getData","selectId","getSelectedID","useDataContext","useContext","useIDContext","selectedID","API_URL","COMPANY_DEPARTMENT","useStyles","makeStyles","theme","root","flexGrow","MediaControlCard","props","classes","Grid","container","alignItems","className","spacing","item","xs","style","margin","Avatar","src","info","avatar","url","alt","Typography","component","variant","firstName","lastName","Date","createdAt","toLocaleString","address","SatelliteStyle","width","height","color","background","borderRadius","textAlign","navRightStyle","position","top","left","padding","ClusterMarker","longitude","latitude","pointCount","Map","React","useState","bearing","zoom","viewport","setViewport","popupInfo","setPopupInfo","map","setStyle","useEffect","mapStyle","onViewportChange","dragPan","viewportChangeMethod","viewportChangeOptions","attributionControl","compact","customAttribution","tipSize","anchor","closeOnClick","onClose","radius","extent","nodeSize","point","key","id","viewBox","cursor","fill","stroke","transform","onClick","e","console","log","d","showCompass","showZoom","fitBoundsOptions","maxZoom","FormControlLabel","control","Switch","checked","onChange","event","target","name","label","Table","moment","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","setData","company","setCompany","department","setDepartment","companies","setCompanies","departments","setDepartments","a","fetch","startOf","add","toISOString","then","res","json","response","companyDepartments","companiesData","departmentsData","record","index","includes","companyName","push","Object","keys","fetchData","fetchCompany","searchData","endOf","downloadCSV","array","link","document","createElement","csv","result","forEach","element","field","join","ctr","convertArrayOfObjectsToCSV","filename","toLocaleDateString","match","setAttribute","encodeURI","click","utils","MomentUtils","Paper","backgroundColor","marginLeft","justify","md","format","value","date","KeyboardButtonProps","inputVariant","size","FormControl","fullWidth","maxWidth","InputLabel","Select","labelId","MenuItem","comp","depart","Button","onRowClick","rowData","title","length","columns","export","grouping","render","formats","small","hidden","detailPanel","Chip","gender","email","options","search","exportButton","paging","pageSize","exportAllData","exportCsv","pageSizeOptions","cellStyle","paddingTop","paddingBottom","headerStyle","menuButton","marginRight","display","breakpoints","up","createMuiTheme","palette","primary","main","secondary","SearchAppBar","AppBar","Toolbar","paper","text","App","setSelectedID","Provider","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9eafeb51.chunk.js","sourcesContent":["import {useContext, createContext } from 'react';\r\n\r\n\r\nexport const AppContext = createContext({\r\n    data: null,\r\n    getData: () => {},\r\n    selectId: null,\r\n    getSelectedID: () => {},\r\n})\r\n\r\nexport function useDataContext () {\r\n    const {data, getData} = useContext(AppContext);\r\n    return {data, getData};\r\n}\r\n\r\nexport function useIDContext () {\r\n    const {selectedID, getSelectedID} = useContext(AppContext);\r\n    return {selectedID, getSelectedID};\r\n}","const API_URL = `https://backend.powermap.live`\r\nconst COMPANY_DEPARTMENT = `${API_URL}/company-departments?_limit=-1`\r\n\r\n\r\nexport {\r\n    API_URL,\r\n    COMPANY_DEPARTMENT\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {API_URL} from '../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport default function MediaControlCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container alignItems=\"flex-start\" className={classes.root} spacing={2}>\r\n    <Grid item xs={3} \r\n        style={{margin: \"auto\"}}\r\n    >\r\n        <Avatar\r\n            src={API_URL + props.info.avatar.url}\r\n            alt=\"props.info.firstName\"\r\n        />\r\n    </Grid>\r\n    <Grid item xs={9}>\r\n        <Typography component=\"subtitle1\" variant=\"subtitle1\">\r\n            {props.info.firstName + \" \" + props.info.lastName}\r\n            <br />\r\n            <small>{new Date(props.info.createdAt).toLocaleString()}</small>\r\n        </Typography>\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n        <Typography component=\"p\" variant=\"p\">\r\n            {props.info.address}\r\n        </Typography>\r\n    </Grid>\r\n    </Grid>\r\n  );\r\n}","const SatelliteStyle = {\r\n        'version': 8,\r\n        'sources': {\r\n        'raster-tiles': {\r\n        'type': 'raster',\r\n        'tiles': [\r\n        'http://mt0.google.com/vt/lyrs=y&hl=th&x={x}&y={y}&z={z}'\r\n        ],\r\n        'tileSize': 256,\r\n        }\r\n        },\r\n        'layers': [\r\n        {\r\n        'id': 'simple-tiles',\r\n        'type': 'raster',\r\n        'source': 'raster-tiles',\r\n        'minzoom': 0,\r\n        'maxzoom': 22\r\n        }\r\n    ]\r\n};\r\n\r\nexport default SatelliteStyle;","import React, {useEffect} from 'react';\r\nimport MapGL, {AttributionControl, Marker, Popup, FullscreenControl, GeolocateControl, NavigationControl } from '@urbica/react-map-gl';\r\nimport Cluster from '@urbica/react-map-gl-cluster';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport {useDataContext, useIDContext} from '../DataContext';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport StaffInfo from './Popup';\r\nimport SatelliteStyle from '../SatelliteStyle';\r\n\r\nconst style = {\r\n    width: '20px',\r\n    height: '20px',\r\n    color: '#fff',\r\n    background: '#1978c8',\r\n    borderRadius: '20px',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst navRightStyle = {\r\n  position: 'absolute',\r\n  top: 65,\r\n  left: 0,\r\n  padding: '10px',\r\n  color: 'white'\r\n};\r\n\r\nconst ClusterMarker = ({ longitude, latitude, pointCount }) => (\r\n    <Marker longitude={longitude} latitude={latitude}>\r\n      <div style={{ ...style, background: '#f28a25' }}>{pointCount}</div>\r\n    </Marker>\r\n);\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\nconst SIZE = 20;\r\n\r\nexport default function Map () {\r\n    const [viewport, setViewport] = React.useState({\r\n        longitude: 100.594699,\r\n        latitude: 14.244686, \r\n        bearing: 0,\r\n        zoom: 8\r\n    })\r\n    const [popupInfo, setPopupInfo] = React.useState(null);\r\n    const [style, setStyle] = React.useState({\r\n      map: true,\r\n    });\r\n  \r\n    const handleChange = (event) => {\r\n      setStyle({ ...style, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const {data} = useDataContext();\r\n    const {selectedID, getSelectedID} = useIDContext();\r\n\r\n    useEffect(()=> {\r\n      if(selectedID && selectedID.latitude){\r\n        setViewport({...viewport, \r\n          latitude: selectedID.latitude, longitude: selectedID.longitude, zoom: 14\r\n        })\r\n        setPopupInfo(selectedID);\r\n        getSelectedID(null);\r\n      };\r\n    });\r\n\r\n    const onMarkerClick = (e) => {\r\n        console.log(e);\r\n        setPopupInfo(e);\r\n    };\r\n    const _renderPopup = () => {\r\n        return (\r\n          popupInfo && (\r\n            <Popup\r\n              tipSize={5}\r\n              anchor=\"bottom\"\r\n              longitude={popupInfo.longitude}\r\n              latitude={popupInfo.latitude}\r\n              closeOnClick={true}\r\n              onClose={() => setPopupInfo(null)}\r\n              style={{\r\n                  width: '300px !important'\r\n              }}\r\n            >\r\n              <StaffInfo info={popupInfo} />\r\n            </Popup>\r\n          )\r\n        );\r\n    }\r\n    \r\n    if(!data) return null;\r\n    return (\r\n      <>\r\n        <MapGL\r\n        style={{ width: '100%', height: '400px' }}\r\n        // mapStyle={\r\n        //   \"https://search.map.powermap.in.th/api/v2/map/vtile/styles?name=thailand_th_black&access_token=b378c575291af30a29f59919fd7e7e4c012d45c4\"\r\n        // }\r\n        mapStyle={style.map ?\r\n          \"https://search.map.powermap.in.th/api/v2/map/vtile/styles?name=thailand_th_black&access_token=b378c575291af30a29f59919fd7e7e4c012d45c4\"\r\n          :SatelliteStyle\r\n        }\r\n        {...viewport}\r\n        onViewportChange={(viewport) => {\r\n          setViewport(viewport);\r\n        }}\r\n        dragPan= {true}\r\n        viewportChangeMethod={\"flyTo\"}\r\n        viewportChangeOptions={1200}\r\n        attributionControl={false}\r\n        >\r\n          \r\n        <AttributionControl\r\n          compact={false}\r\n          position='bottom-right'\r\n          customAttribution='Powered by Powermap'\r\n        />\r\n        {_renderPopup()}\r\n        <Cluster radius={40} extent={512} nodeSize={64} component={ClusterMarker}>\r\n            {data.map(point => (\r\n            <Marker\r\n                key={point.id}\r\n                longitude={point.longitude}\r\n                latitude={point.latitude}\r\n            >\r\n            <svg\r\n                height={SIZE}\r\n                viewBox=\"0 0 24 24\"\r\n                style={{\r\n                    cursor: 'pointer',\r\n                    fill: '#d00',\r\n                    stroke: 'none',\r\n                    transform: `translate(0px,${SIZE}px)`\r\n                }}\r\n                onClick={() => onMarkerClick(point)}\r\n                >\r\n                <path d={ICON} />\r\n            </svg>\r\n            </Marker>\r\n        ))}\r\n        </Cluster>\r\n\r\n        <NavigationControl showCompass showZoom position='top-right' />\r\n        <FullscreenControl position='top-right' />\r\n        <GeolocateControl position='top-right' fitBoundsOptions={{maxZoom: 14}}/>\r\n        </MapGL>\r\n        <div style={navRightStyle}>\r\n          <FormControlLabel\r\n            control={<Switch checked={style.map} onChange={handleChange} name=\"map\" />}\r\n            label={style.map?\"MAP\":\"Satellite\"}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {Avatar, Chip, Grid, FormControl, InputLabel, MenuItem, Select, Button, Paper } from \"@material-ui/core\";\r\nimport moment from 'moment';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {COMPANY_DEPARTMENT} from '../constants';\r\nimport {useDataContext, useIDContext} from '../DataContext';\r\n\r\nimport {API_URL} from '../constants';\r\n\r\nexport default function Table (props) {\r\n    \r\n    const [selectedStartDate, setSelectedStartDate] = React.useState(new moment());\r\n    const [selectedEndDate, setSelectedEndDate] = React.useState(new moment());\r\n    const [data, setData] = React.useState(null);\r\n    const [company, setCompany] = React.useState();\r\n    const [department, setDepartment] = React.useState();\r\n    const [companies, setCompanies] = React.useState(null);\r\n    const [departments, setDepartments] = React.useState(null);\r\n    const {getData} = useDataContext();\r\n    const {getSelectedID} = useIDContext();\r\n\r\n    useEffect (()=> {\r\n        async function fetchData() {\r\n            try {\r\n                let response = await fetch( API_URL + `/staff-locations?_limit=-1&_sort=createdAt:DESC&createdAt_gte=${new moment().startOf('day').add(7, 'hours').toISOString()}`).then(res=>res.json())    \r\n                console.log(response);\r\n                setData(response);\r\n                getData(response)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if(!data) {\r\n            fetchData();\r\n        }\r\n        async function fetchCompany() {\r\n            try {\r\n                let companyDepartments = await fetch(COMPANY_DEPARTMENT).then(res => res.json());\r\n                let companiesData = [];\r\n                let departmentsData = {};\r\n                await companyDepartments.map((record, index) => {\r\n                    if (!companiesData.includes(record.companyName)) {\r\n                      companiesData.push(record.companyName)\r\n                    }\r\n                    if (!Object.keys(departmentsData).includes(record.companyName)) {\r\n                        console.log(record.companyName)\r\n                        departmentsData[record.companyName] = [record.department]\r\n                    } else {\r\n                        console.log(record.companyName)\r\n                        departmentsData[record.companyName].push(record.department)\r\n                        console.log(departmentsData)\r\n                    }\r\n                    \r\n                })\r\n                setCompanies(companiesData);\r\n                setDepartments(departmentsData);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n          }\r\n          if (!companies || !departments){\r\n              console.log()\r\n              fetchCompany();\r\n        }\r\n    },[company, department]);\r\n\r\n    const searchData = async () => {\r\n      try {\r\n          let response = await fetch( \r\n            `${API_URL}/staff-locations?_limit=-1&_sort=createdAt:DESC&createdAt_gte=${new moment(selectedStartDate).startOf('day').add(7, 'hours').toISOString()}&createdAt_lte=${new moment(selectedEndDate).endOf('day').add(7, 'hours').toISOString()}&${company && company !== \"ALL\"?'company='+company:\"\"}&${department && department !== \"ALL\"?'department='+department:\"\"}`\r\n            )\r\n          .then(res=>res.json())\r\n          console.log(response);\r\n          setData(response)\r\n          getData(response)\r\n      } catch (error) {\r\n          console.log(error)\r\n      }\r\n    }\r\n\r\n    const handleStartDateChange = (date) => {\r\n        setSelectedStartDate(date);\r\n    };\r\n    const handleEndDateChange = (date) => {\r\n        setSelectedEndDate(date);\r\n    };\r\n    \r\n    const handleChangeCompany = company => {\r\n        setCompany(company.target.value);\r\n        setDepartment(\"ALL\");\r\n    };\r\n    console.log(department);\r\n\r\n    const handleChangeDepartment = department => {\r\n        setDepartment(department.target.value);\r\n    };\r\n    function convertArrayOfObjectsToCSV(array, data) {\r\n      let result;\r\n      let keys = [];\r\n      array.forEach(element => {\r\n        if(element.field !== 'url')\r\n          keys.push(element.field);\r\n      });\r\n    \r\n      const columnDelimiter = \",\";\r\n      const lineDelimiter = \"\\n\";\r\n    \r\n      result = \"\";\r\n      result += keys.join(columnDelimiter);\r\n      result += lineDelimiter;\r\n    \r\n      data.forEach(item => {\r\n        let ctr = 0;\r\n        keys.forEach(key => {\r\n          if (ctr > 0) result += columnDelimiter;\r\n          if (key === \"createdAt\")\r\n            result += new Date(item[key]).toLocaleString();\r\n          else\r\n            result += item[key]\r\n          ctr++;\r\n        });\r\n        result += lineDelimiter;\r\n      });\r\n      console.log(result);\r\n      return result;\r\n    }\r\n    \r\n    function downloadCSV(array, data) {\r\n      const link = document.createElement(\"a\");\r\n      let csv = convertArrayOfObjectsToCSV(array, data);\r\n      if (csv == null) return;\r\n    \r\n      const filename = `export_from_${new Date(selectedStartDate).toLocaleDateString()}_to_${new Date(selectedEndDate).toLocaleDateString()}.csv`;\r\n    \r\n      if (!csv.match(/^data:text\\/csv/i)) {\r\n        csv = `data:text/csv;charset=utf-8,${csv}`;\r\n      }\r\n    \r\n      link.setAttribute(\"href\", encodeURI(csv));\r\n      link.setAttribute(\"download\", filename);\r\n      link.click();\r\n    }\r\n\r\n    if (!data || !companies || !departments){\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n        <>\r\n        <Paper>\r\n          <div style={{ backgroundColor: '#e8eaf5' }}>\r\n          <Grid container spacing={1} style={{marginLeft: 15}} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12} md={2}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"start date\"\r\n            format=\"YYYY/MM/DD\"\r\n            value={selectedStartDate}\r\n            onChange={handleStartDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n          /></Grid>\r\n          <Grid item xs={12} md={2}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"end date\"\r\n            format=\"YYYY/MM/DD\"\r\n            value={selectedEndDate}\r\n            onChange={handleEndDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n          </Grid>\r\n        <Grid item xs={12} md={2}>\r\n        <div>\r\n        <FormControl variant=\"outlined\" fullWidth style={{maxWidth: 266}} size=\"small\" >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\" >Company</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={company?company:\"ALL\"}\r\n                onChange={handleChangeCompany}\r\n                label=\"Company\"\r\n            >\r\n            <MenuItem value={\"ALL\"} key={\"first\"}>{\"ALL\"}</MenuItem>\r\n            {companies.map((comp, index) => (\r\n                <MenuItem value={comp} key={index}>{comp}</MenuItem>\r\n            ))}\r\n            </Select>\r\n        </FormControl>\r\n        </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n        <FormControl variant=\"outlined\" fullWidth style={{maxWidth: 266}} size=\"small\" >\r\n            <InputLabel>Department</InputLabel>\r\n            <Select\r\n              id=\"demo-simple-select-outlined\"\r\n              value={department?department:\"ALL\"}\r\n              onChange={handleChangeDepartment}\r\n              label=\"Department\"\r\n            >\r\n            <MenuItem value={\"ALL\"} key={\"first\"}>{\"ALL\"}</MenuItem>\r\n            {company?departments[company].map((depart, index) => (\r\n                <MenuItem value={depart} key={index}>{depart}</MenuItem>\r\n            )):null}\r\n            </Select>\r\n        </FormControl>\r\n        </Grid> \r\n        <Button \r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => searchData()}\r\n        >SEARCH</Button>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n        <MaterialTable\r\n            onRowClick={(event, rowData) => {\r\n              console.log(rowData);\r\n              getSelectedID(rowData);\r\n            }}\r\n            title={`Total Found: ${data.length} records`}\r\n            columns={[\r\n            { title: 'Company', field: 'company' },\r\n            { title: 'Department', field: 'department' },\r\n            {\r\n                field: 'url',\r\n                title: 'Avatar',\r\n                width: 30,\r\n                export: false,\r\n                grouping: false,\r\n                render: rowData => <Avatar alt=\"selfie\" src={API_URL + rowData.avatar.formats.small.url} style={{width: 30, height: 30}}/>\r\n            },\r\n            { title: 'Emp. ID', field: 'empID',\r\n            grouping: false },\r\n            { title: 'First name', field: 'firstName', \r\n            grouping: false },\r\n            { title: 'Last name', field: 'lastName',\r\n            grouping: false },\r\n            { title: 'Gender', field: 'gender', hidden: true, export: true, grouping: false },\r\n            { title: 'Email', field: 'email', hidden: true, export: true, grouping: false },\r\n            { title: 'Address', field: 'address', hidden: true, export: true, grouping: false },\r\n            { title: 'Checkin At', field: 'createdAt', grouping: false,\r\n              render: rowData => new Date(rowData.createdAt).toLocaleString()},\r\n            ]}\r\n            detailPanel={rowData => {\r\n              return (\r\n                <Grid container spacing={2} style={{margin: 10}}>\r\n                  <Grid item>\r\n                  <Avatar alt=\"selfie\" src={API_URL + rowData.avatar.formats.small.url} style={{width: 150, height: 150}}/>\r\n                  </Grid>\r\n                  <Grid item>\r\n                  <Chip label={rowData.gender} />  \r\n                  </Grid>\r\n                  <Grid item>\r\n                  <Chip label={rowData.email} />\r\n                  </Grid>\r\n                  <Grid item>\r\n                  <Chip label={rowData.address} />\r\n                  </Grid>\r\n                </Grid>\r\n              )\r\n            }}\r\n            options={{\r\n                search: true,\r\n                exportButton: true,\r\n                paging: true,\r\n                pageSize: 20,\r\n                grouping: true,\r\n                exportAllData: true,\r\n                exportCsv: (columns, data) => {\r\n                  downloadCSV(columns, data);\r\n                },\r\n                pageSizeOptions: [5,10,20,50],\r\n                cellStyle: {height:40, paddingTop:0, paddingBottom:0, textAlign: \"right\"},\r\n                headerStyle: {textAlign: \"right\"}\r\n            }}\r\n            // actions={[\r\n            //     {\r\n            //       icon: 'map',\r\n            //       tooltip: 'Save User',\r\n            //       onClick: (event, rowData) => {\r\n            //         // Do save operation\r\n            //         alert(JSON.stringify(rowData))\r\n            //         this.props.callMap(rowData);\r\n            //       }\r\n            //     }\r\n            // ]}\r\n            data={data}\r\n        />\r\n        </></MuiPickersUtilsProvider>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles, createMuiTheme,MuiThemeProvider } from '@material-ui/core/styles';\r\nimport {COMPANY_DEPARTMENT} from '../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    width: 500\r\n  }\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#ff9100',\r\n    },\r\n  }\r\n});\r\n\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          AAPICO STAFF LOCATION\r\n        </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}","import React from 'react';\r\nimport Map from './Dashboard/Map';\r\nimport Table from './Dashboard/Table';\r\nimport SearchBar from './Dashboard/SearchBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {AppContext} from './DataContext';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState(null);\r\n  const [selectedID, setSelectedID] = React.useState(null);\r\n\r\n  const getData = (data) => {\r\n    setData(data)\r\n  }\r\n  const getSelectedID = (data) => {\r\n    setSelectedID(data)\r\n  }\r\n\r\n\r\n  return (\r\n    <AppContext.Provider value={{data, selectedID, getData, getSelectedID}} >\r\n      <div className={classes.root}>\r\n        <Grid container spacing={1}>\r\n          <SearchBar />\r\n          <Grid item xs={12}>\r\n            <Map />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}